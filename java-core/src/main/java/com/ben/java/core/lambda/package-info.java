/**
 * @author ben-xia
 * @date 2021/01/24
 * @Description collection操作
 *
 * 一. Stream的概述(Stream可以由数组或集合创建)
 *   ，1. 对Stream的操作
 *      1.1 中间操作，每次返回一个新的流，可以有多个。
 *      1.2 终端操作，每个流只能进行一次终端操作，终端操作结束后流无法再次使用。终端操作会产生一个新的集合或值。
 *
 *     2. Stream的特性：
 *      2.1 stream不存储数据，而是按照特定的规则对数据进行计算，一般会输出结果。
 *      2.2 stream不会改变数据源，通常情况下会产生一个新的集合或一个值。
 *      2.3 stream具有延迟执行特性，只有调用终端操作时，中间操作才会执行。
 *
 * 二. 流的创建
 *    stream和parallelStream的简单区分： stream是顺序流，由主线程按顺序对流执行操作，而parallelStream是并行流，
 *    内部以多线程并行执行的方式对流进行操作，但前提是流中的数据处理没有顺序要求。
 *
 *    除了直接创建并行流，还可以通过parallel()把顺序流转换成并行流：
 *
 *
 *三. Stream的使用
 *      3.1 遍历/匹配（foreach/find/match）
 *      3.2 筛选(filter):是按照一定的规则校验流中的元素，将符合条件的元素提取到新的流中的操作。
 *      3.3 聚合(max/min/count)
 *      3.4 映射(map/flatMap): 映射，可以将一个流的元素按照一定的映射规则映射到另一个流中。分为map和flatMap：
 *            map：接收一个函数作为参数，该函数会被应用到每个元素上，并将其映射成一个新的元素。
 *            flatMap：接收一个函数作为参数，将流中的每个值都换成另一个流，然后把所有流连接成一个流。
 *      3.5 归约(reduce): 也称缩减，顾名思义，是把一个流缩减成一个值，能实现对集合求和、求乘积和求最值操作[相当于mysql的组函数]
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 **/
package com.ben.java.core.lambda;
