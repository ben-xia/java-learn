<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ben.java.log</groupId>
        <artifactId>log-learn</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>log-slf4j</artifactId>
    <packaging>jar</packaging>

    <name>slf4j</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--slf4j 日志门面(接口)-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.36</version>
        </dependency>

        <!--
        日志实现分两类: 1. 比slf4j出现晚的logback,slf4j-nop,,默认实现了slf4j接口规范;
                     2. 比slf4j出现早的log4j,jul,都没有实现slf4j接口规范,需要在这两者之间加一个适配层;
        -->
        <!-- 1.logback 的日志实现-开始-->
        <!--        <dependency>-->
        <!--            <groupId>ch.qos.logback</groupId>-->
        <!--            <artifactId>logback-classic</artifactId>-->
        <!--            <version>1.2.9</version>-->
        <!--        </dependency>-->
        <!--1.logback 的日志实现-结束-->
        <!--2.slf4j-nop的日志实现,  其实它是一个日志开关, 引入后不会使用任何日志实现-开始-->
        <!--        <dependency>-->
        <!--            <groupId>org.slf4j</groupId>-->
        <!--            <artifactId>slf4j-nop</artifactId>-->
        <!--            <version>1.7.36</version>-->
        <!--        </dependency>-->
        <!--2.slf4j-nop的日志实现,  其实它是一个日志开关, 引入后不会使用任何日志实现-开始-->

        <!--                          3.log4j 的日志实现-开始                             -->
        <!--        &lt;!&ndash;log4j适配器&ndash;&gt;
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                    <version>1.7.36</version>
                </dependency>
                &lt;!&ndash;log4j 实现&ndash;&gt;
                <dependency>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                    <version>1.2.17</version>
                </dependency>-->
        <!--                          3.log4j 的日志实现-结束                             -->


        <!--   4.log4j桥接到Logback-开始     -->
        <!-- a.注释掉Log4j依赖; b.引入Log4j桥接到slf4j的依赖:log4j-over-slf4j ; c.引入Logback依赖       -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>1.7.36</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.9</version>
        </dependency>

        <!--  4. log4j桥接到Logback-结束     -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
